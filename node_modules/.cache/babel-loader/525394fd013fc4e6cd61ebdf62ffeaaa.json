{"ast":null,"code":"import _classCallCheck from\"/Users/macbookair/Documents/Corso Web Developer/Robofriends/robofriends/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/macbookair/Documents/Corso Web Developer/Robofriends/robofriends/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/macbookair/Documents/Corso Web Developer/Robofriends/robofriends/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/macbookair/Documents/Corso Web Developer/Robofriends/robofriends/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from'react';import CardList from'./CardList';// import {robots} from './robot';\nimport SearchBox from'./SearchBox';import'./App.css';import Scroll from'./Scroll';// STATE é di fatto un oggetto in gradi di cambiare\n// const state = {\n// \trobots: robots,\n// \tsearchfields: ''\n// }, posso usare anche setState\n// const App = () => { \n// \treturn (\n// \t\t<div className='tc'>\n// \t\t\t<h1>RoboFriends</h1>\n// \t\t\t<SearchBox />\n// \t\t\t<CardList robots={robots} />\n// \t\t</div>\n// \t);\n// }\n// devo creare una classe per usare constructor\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var App=/*#__PURE__*/function(_Component){_inherits(App,_Component);var _super=_createSuper(App);function App(){var _this;_classCallCheck(this,App);// super() mi serve per usare this.\n// Siccome é un component é una smart app\n_this=_super.call(this);_this.onSearchChange=function(event){_this.setState({searchfield:event.target.value});};_this.state={// robots: robots,\nrobots:[],searchfield:''};return _this;}_createClass(App,[{key:\"componentDidMount\",value:function componentDidMount(){var _this2=this;// spiegato successivamente\n// fetch é una chiamata di richiesta al server\nfetch('https://jsonplaceholder.cypress.io/users').then(function(response){return response.json();}).then(function(users){_this2.setState({robots:users});});}// Quando creo un mio methods in react devo usare il seguente \n// modo di scrivere SEMPRE\n},{key:\"render\",value:// render é una funzione che, sfruttando il virtual DOM, va a creare l'app\nfunction render(){var _this3=this;var filteredRobots=this.state.robots.filter(function(robots){return robots.name.toLowerCase().includes(_this3.state.searchfield.toLowerCase());// Attenzione\n// Andrebbe inserito toLowerCase()\n});// Se troppo lento a caricare i dati dal server\nif(this.state.robots.length===0){return/*#__PURE__*/_jsx(\"h1\",{className:\"tc\",children:\"Loading...\"});}else{return/*#__PURE__*/_jsxs(\"div\",{className:\"tc\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"f1\",children:\"RoboFriends\"}),/*#__PURE__*/_jsx(SearchBox,{searchChange:this.onSearchChange}),/*#__PURE__*/_jsx(Scroll,{children:/*#__PURE__*/_jsx(CardList,{robots:filteredRobots})})]});}}}]);return App;}(Component);export default App;","map":{"version":3,"sources":["/Users/macbookair/Documents/Corso Web Developer/Robofriends/robofriends/src/App.js"],"names":["React","Component","CardList","SearchBox","Scroll","App","onSearchChange","event","setState","searchfield","target","value","state","robots","fetch","then","response","json","users","filteredRobots","filter","name","toLowerCase","includes","length"],"mappings":"wuBAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,MAAOC,CAAAA,QAAP,KAAqB,YAArB,CACA;AACA,MAAOC,CAAAA,SAAP,KAAsB,aAAtB,CACA,MAAO,WAAP,CACA,MAAOC,CAAAA,MAAP,KAAmB,UAAnB,CAGA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;2FACMC,CAAAA,G,0FACL,cAAc,qCACb;AACA;AACA,wBAHa,MA2BdC,cA3Bc,CA2BG,SAACC,KAAD,CAAW,CAC3B,MAAKC,QAAL,CAAc,CAAEC,WAAW,CAAEF,KAAK,CAACG,MAAN,CAAaC,KAA5B,CAAd,EACA,CA7Ba,CAIb,MAAKC,KAAL,CAAa,CACZ;AACAC,MAAM,CAAE,EAFI,CAGZJ,WAAW,CAAE,EAHD,CAAb,CAJa,aASb,C,iDAGF,4BAAoB,iBACnB;AACA;AACAK,KAAK,CAAC,0CAAD,CAAL,CACCC,IADD,CACM,SAAAC,QAAQ,QAAIA,CAAAA,QAAQ,CAACC,IAAT,EAAJ,EADd,EAECF,IAFD,CAEM,SAAAG,KAAK,CAAI,CACd,MAAI,CAACV,QAAL,CAAc,CAACK,MAAM,CAAEK,KAAT,CAAd,EACA,CAJD,EAKA,CAKD;AACA;sBAKA;AACC,iBAAS,iBACR,GAAMC,CAAAA,cAAc,CAAG,KAAKP,KAAL,CAAWC,MAAX,CAAkBO,MAAlB,CAAyB,SAAAP,MAAM,CAAI,CACzD,MAAOA,CAAAA,MAAM,CAACQ,IAAP,CAAYC,WAAZ,GAA0BC,QAA1B,CAAmC,MAAI,CAACX,KAAL,CAAWH,WAAX,CAAuBa,WAAvB,EAAnC,CAAP,CACA;AACA;AACA,CAJsB,CAAvB,CAKA;AACA,GAAI,KAAKV,KAAL,CAAWC,MAAX,CAAkBW,MAAlB,GAA6B,CAAjC,CAAoC,CACnC,mBAAO,WAAI,SAAS,CAAC,IAAd,wBAAP,CACA,CAFD,IAEO,CACN,mBACA,aAAK,SAAS,CAAC,IAAf,wBACC,WAAI,SAAS,CAAE,IAAf,yBADD,cAEC,KAAC,SAAD,EAAW,YAAY,CAAE,KAAKlB,cAA9B,EAFD,cAGC,KAAC,MAAD,wBACC,KAAC,QAAD,EAAU,MAAM,CAAEa,cAAlB,EADD,EAHD,GADA,CASA,CACD,C,iBArDgBlB,S,EAwDlB,cAAeI,CAAAA,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport CardList from './CardList';\n// import {robots} from './robot';\nimport SearchBox from './SearchBox';\nimport './App.css';\nimport Scroll from './Scroll'\n\n\n// STATE é di fatto un oggetto in gradi di cambiare\n// const state = {\n// \trobots: robots,\n// \tsearchfields: ''\n// }, posso usare anche setState\n\n// const App = () => { \n// \treturn (\n// \t\t<div className='tc'>\n// \t\t\t<h1>RoboFriends</h1>\n// \t\t\t<SearchBox />\n// \t\t\t<CardList robots={robots} />\n// \t\t</div>\n// \t);\n// }\n\n// devo creare una classe per usare constructor\nclass App extends Component {\n\tconstructor() {\n\t\t// super() mi serve per usare this.\n\t\t// Siccome é un component é una smart app\n\t\tsuper()\n\t\tthis.state = {\n\t\t\t// robots: robots,\n\t\t\trobots: [],\n\t\t\tsearchfield: ''\n\t\t}\n\t}\n\n\ncomponentDidMount() {\n\t// spiegato successivamente\n\t// fetch é una chiamata di richiesta al server\n\tfetch('https://jsonplaceholder.cypress.io/users')\n\t.then(response => response.json())\n\t.then(users => {\n\t\tthis.setState({robots: users})\n\t});\n}\n\n\n\n\n// Quando creo un mio methods in react devo usare il seguente \n// modo di scrivere SEMPRE\n\tonSearchChange = (event) => {\n\t\tthis.setState({ searchfield: event.target.value})\n\t}\n\n// render é una funzione che, sfruttando il virtual DOM, va a creare l'app\n\trender() { \n\t\tconst filteredRobots = this.state.robots.filter(robots => {\n\t\t\treturn robots.name.toLowerCase().includes(this.state.searchfield.toLowerCase());\n\t\t\t// Attenzione\n\t\t\t// Andrebbe inserito toLowerCase()\n\t\t})\n\t\t// Se troppo lento a caricare i dati dal server\n\t\tif (this.state.robots.length === 0) {\n\t\t\treturn <h1 className='tc'>Loading...</h1>\n\t\t} else {\n\t\t\treturn (\n\t\t\t<div className='tc'>\n\t\t\t\t<h1 className= 'f1' >RoboFriends</h1>\n\t\t\t\t<SearchBox searchChange={this.onSearchChange}/>\n\t\t\t\t<Scroll>\n\t\t\t\t\t<CardList robots={filteredRobots} />\n\t\t\t\t</Scroll>\n\t\t\t</div>\n\t\t);\n\t\t}\t\n\t}\n}\n\nexport default App;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}