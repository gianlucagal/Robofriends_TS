{"ast":null,"code":"var _jsxFileName = \"/Users/macbookair/Documents/Corso Web Developer/Robofriends/robofriends/src/App.js\";\nimport React, { Component } from 'react';\nimport CardList from './CardList';\nimport { robots } from './robot';\nimport SearchBox from './SearchBox';\nimport './App.css'; // STATE é di fatto un oggetto in gradi di cambiare\n// const state = {\n// \trobots: robots,\n// \tsearchfields: ''\n// }, posso usare anche setState\n// const App = () => { \n// \treturn (\n// \t\t<div className='tc'>\n// \t\t\t<h1>RoboFriends</h1>\n// \t\t\t<SearchBox />\n// \t\t\t<CardList robots={robots} />\n// \t\t</div>\n// \t);\n// }\n// devo creare una classe per usare constructor\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor() {\n    // super() mi serve per usare this.\n    super();\n\n    this.onSearchChange = event => {\n      this.setState({\n        searchfield: event.target.value\n      });\n    };\n\n    this.state = {\n      robots: robots,\n      searchfield: ''\n    };\n  } // Quando creo un mio methods in react devo usare il seguente \n  // modo di scrivere SEMPRE\n\n\n  // render é una funzione che, sfruttando il virtual DOM, va a creare l'app\n  render() {\n    const filteredRobots = this.state.robots.filter(robots => {\n      return robots.name.toLowerCase().includes(this.state.searchfield.toLowerCase()); // Attenzione\n      // Andrebbe inserito toLowerCase()\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tc\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"RoboFriends\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(SearchBox, {\n        searchChange: this.onSearchChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(CardList, {\n        robots: filteredRobots\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 4\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/macbookair/Documents/Corso Web Developer/Robofriends/robofriends/src/App.js"],"names":["React","Component","CardList","robots","SearchBox","App","constructor","onSearchChange","event","setState","searchfield","target","value","state","render","filteredRobots","filter","name","toLowerCase","includes"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAAQC,MAAR,QAAqB,SAArB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAO,WAAP,C,CAGA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;AACA,MAAMC,GAAN,SAAkBJ,SAAlB,CAA4B;AAC3BK,EAAAA,WAAW,GAAG;AACb;AACA;;AAFa,SAWdC,cAXc,GAWIC,KAAD,IAAW;AAC3B,WAAKC,QAAL,CAAc;AAAEC,QAAAA,WAAW,EAAEF,KAAK,CAACG,MAAN,CAAaC;AAA5B,OAAd;AACA,KAba;;AAGb,SAAKC,KAAL,GAAa;AACZV,MAAAA,MAAM,EAAEA,MADI;AAEZO,MAAAA,WAAW,EAAE;AAFD,KAAb;AAIA,GAR0B,CAU5B;AACA;;;AAKA;AACCI,EAAAA,MAAM,GAAG;AACR,UAAMC,cAAc,GAAG,KAAKF,KAAL,CAAWV,MAAX,CAAkBa,MAAlB,CAAyBb,MAAM,IAAI;AACzD,aAAOA,MAAM,CAACc,IAAP,CAAYC,WAAZ,GAA0BC,QAA1B,CAAmC,KAAKN,KAAL,CAAWH,WAAX,CAAuBQ,WAAvB,EAAnC,CAAP,CADyD,CAEzD;AACA;AACA,KAJsB,CAAvB;AAKA,wBACC;AAAK,MAAA,SAAS,EAAC,IAAf;AAAA,8BACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADD,eAEC,QAAC,SAAD;AAAW,QAAA,YAAY,EAAE,KAAKX;AAA9B;AAAA;AAAA;AAAA;AAAA,cAFD,eAGC,QAAC,QAAD;AAAU,QAAA,MAAM,EAAEQ;AAAlB;AAAA;AAAA;AAAA;AAAA,cAHD;AAAA;AAAA;AAAA;AAAA;AAAA,YADD;AAOA;;AA9B0B;;AAiC5B,eAAeV,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport CardList from './CardList';\nimport {robots} from './robot';\nimport SearchBox from './SearchBox';\nimport './App.css';\n\n\n// STATE é di fatto un oggetto in gradi di cambiare\n// const state = {\n// \trobots: robots,\n// \tsearchfields: ''\n// }, posso usare anche setState\n\n// const App = () => { \n// \treturn (\n// \t\t<div className='tc'>\n// \t\t\t<h1>RoboFriends</h1>\n// \t\t\t<SearchBox />\n// \t\t\t<CardList robots={robots} />\n// \t\t</div>\n// \t);\n// }\n\n// devo creare una classe per usare constructor\nclass App extends Component {\n\tconstructor() {\n\t\t// super() mi serve per usare this.\n\t\tsuper()\n\t\tthis.state = {\n\t\t\trobots: robots,\n\t\t\tsearchfield: ''\n\t\t}\n\t}\n\n// Quando creo un mio methods in react devo usare il seguente \n// modo di scrivere SEMPRE\n\tonSearchChange = (event) => {\n\t\tthis.setState({ searchfield: event.target.value})\n\t}\n\n// render é una funzione che, sfruttando il virtual DOM, va a creare l'app\n\trender() { \n\t\tconst filteredRobots = this.state.robots.filter(robots => {\n\t\t\treturn robots.name.toLowerCase().includes(this.state.searchfield.toLowerCase());\n\t\t\t// Attenzione\n\t\t\t// Andrebbe inserito toLowerCase()\n\t\t})\n\t\treturn (\n\t\t\t<div className='tc'>\n\t\t\t\t<h1>RoboFriends</h1>\n\t\t\t\t<SearchBox searchChange={this.onSearchChange}/>\n\t\t\t\t<CardList robots={filteredRobots} />\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}